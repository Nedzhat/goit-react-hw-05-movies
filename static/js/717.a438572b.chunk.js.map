{"version":3,"file":"static/js/717.a438572b.chunk.js","mappings":"8QAGAA,IAAAA,SAAAA,QAAyB,gCAElB,I,EAAMC,EAAe,mCAAG,WAAOC,GAAP,gGAEAF,IAAAA,IAAA,gBAAmBE,EAAnB,oBALf,mCAKe,oBAFA,UAEjBC,EAFiB,uBAKnBC,MAAM,SALa,+CAQZD,EAASE,MARG,yDAYvBC,QAAQC,IAAR,MAZuB,0DAAH,sD,SCFfC,GAAaC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,0R,SC4DvB,EAzDqB,WAAO,IAAD,IACvB,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACMX,GAAOY,EAAAA,EAAAA,MAAPZ,GACFa,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAE3CC,EAAAA,EAAAA,YAAU,WACVnB,EAAgBC,GAAImB,MAAK,SAAAC,GACrBT,EAASS,EACZ,IAAEC,MAAMjB,QAAQC,IAChB,GAAE,CAACL,IAEN,IAAQsB,EAAqEZ,EAArEY,YAAaC,EAAwDb,EAAxDa,MAAOC,EAAiDd,EAAjDc,aAAcC,EAAmCf,EAAnCe,aAAcC,EAAqBhB,EAArBgB,SAAUC,EAAWjB,EAAXiB,OASlE,OACE,6BACE,SAACrB,EAAD,CAAYsB,GAAIb,EAAcc,MAAO,CAAEC,eAAgB,QAAvD,sBACA,iBAAKD,MAAO,CAACE,QAAQ,OAAQC,aAAa,kBAAmBC,QAAQ,QAArE,WACA,gBAAKC,IAAG,0CAAqCZ,GAAea,IAAI,UAChE,iBAAKN,MAAO,CAACI,QAAQ,cAArB,WACE,gBAAIJ,MAAO,CAACO,OAAO,KAAnB,UACGb,EADH,eAbiB,SAACc,GACtB,GAAKA,EAGL,OAAOA,EAAKC,MAAM,EAAG,EACtB,CASoBC,CAAef,GAD9B,SAGA,kDACkBgB,SAAsB,GAAbf,GAD3B,SAGE,qCACA,uBAAIC,KACJ,mCACCC,GAAUA,EAAOc,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,aAGpD,iBAAKf,MAAO,CAACG,aAAa,mBAA1B,WACE,mDACA,2BACE,yBACA,SAAC,KAAD,CAAMJ,GAAG,OAAOZ,MAAO,CAACC,KAAMJ,EAASG,MAAMC,MAA7C,UAAoD,qCAEtD,yBACE,SAAC,KAAD,CAAMW,GAAG,UAAUZ,MAAO,CAACC,KAAMJ,EAASG,MAAMC,MAAhD,UAAuD,8CAI3D,SAAC,EAAA4B,SAAD,CAAUC,UAAU,6CAApB,UACM,SAAC,KAAD,QAIX,C","sources":["services/api-findById.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = 'cff5b6264b529338996c58c3bf596dd8';\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport const serchMovieForId = async (id) => {\n    try {\n        const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n\n        if (!response) {\n            alert('Error');\n            // toast.error('По вашему запросу ничего не найдено!');\n        } else {\n            return response.data;\n        }\n        \n    } catch (error) {\n        console.log(error);\n    }\n}","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const LinkGoBack = styled(Link)`\n    padding: 5px;\n    text-decoration: none;\n    text-transform: uppercase;\n    color: black;\n    font-weight: 700;\n    outline: 1px solid black;\n\n    &:hover {\n        background-color: black;\n        color: white;\n        transition: 1s;\n    }\n`;\n\n","import { useState, useEffect, Suspense } from \"react\";\nimport { Link, useParams, Outlet, useLocation } from \"react-router-dom\";\n\nimport { serchMovieForId } from \"services/api-findById\";\nimport { LinkGoBack } from \"./MovieDetails.styled\";\n\nconst MovieDetails = () => { \n    const [movie, setMovie] = useState({});\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/movies\";\n  \n    useEffect(() => {\n    serchMovieForId(id).then(res => {\n        setMovie(res)\n    }).catch(console.log);    \n    }, [id])\n\n  const { poster_path, title, release_date, vote_average, overview, genres } = movie;\n\n  const fixReleaseDate = (date) => {\n    if (!date) {\n      return;\n    }\n    return date.slice(0, 4);\n  }\n\n  return (\n    <main>\n      <LinkGoBack to={backLinkHref} style={{ textDecoration: 'none' }}>Go Back</LinkGoBack>\n      <div style={{display:\"flex\", borderBottom:\"1px solid black\", padding:\"30px\"}}>\n      <img src={`https://image.tmdb.org/t/p/w200/${poster_path}`} alt=\"Film\" />\n      <div style={{padding:\"0 0 0 20px\"}}>\n        <h2 style={{margin:\"0\"}}>\n          {title} {`(${fixReleaseDate(release_date)})`}\n        </h2>\n        <p>\n          User Score: {`${parseInt(vote_average*10)}%`}\n          </p>\n          <h3>Overiew</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          {genres && genres.map(genre => genre.name).join(\", \")}\n        </div>\n      </div>\n      <div style={{borderBottom:\"1px solid black\"}}>\n        <p>Additional information</p>\n        <ul>\n          <li>\n          <Link to=\"cast\" state={{from: location.state.from}}><p>Cast</p></Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{from: location.state.from}}><p>Reviews</p></Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading page...</div>}>\n            <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","serchMovieForId","id","response","alert","data","console","log","LinkGoBack","styled","Link","useState","movie","setMovie","useParams","location","useLocation","backLinkHref","state","from","useEffect","then","res","catch","poster_path","title","release_date","vote_average","overview","genres","to","style","textDecoration","display","borderBottom","padding","src","alt","margin","date","slice","fixReleaseDate","parseInt","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}