{"version":3,"file":"static/js/779.cbbc3e7a.chunk.js","mappings":"+QAEaA,EAAYC,EAAAA,GAAAA,GAAH,iFAKTC,EAAcD,EAAAA,GAAAA,GAAH,0LAUXE,EAAWF,EAAAA,GAAAA,GAAH,2CAIRG,EAAaH,EAAAA,GAAAA,EAAH,qI,oJClBvBI,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,WAAOC,GAAP,gGAEFF,IAAAA,IAAA,+BALf,mCAKe,kBAAmDE,EAAnD,YAFE,UAEnBC,EAFmB,uBAKrBC,MAAM,SALe,+CAQdD,EAASE,KAAKC,SARA,yDAYzBC,QAAQC,IAAR,MAZyB,0DAAH,sD,mBC6C9B,EA3CmB,WACf,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcQ,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAqBC,GAArB,YAEAC,EAAAA,EAAAA,YAAU,WACQ,KAAVb,GAGJD,EAAkBC,GAAOc,MAAK,SAAAC,GAAG,OAAIL,EAAUK,EAAd,GACpC,GAAE,CAACf,IAaJ,OACI,6BACI,kBAAMgB,SARO,SAACC,GAClBA,EAAEC,iBANoB,SAAClB,GAE3BY,EAD6B,KAAVZ,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,CAIKmB,CAAkBF,EAAEG,OAAOC,SAASrB,MAAMsB,OAC1Cd,EAASS,EAAEG,OAAOC,SAASrB,MAAMsB,MACpC,EAIO,WACI,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,uBAEHd,IAAU,SAAC,KAAD,UACZA,EAAOgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACE,SAAC,KAAD,WAAmB,UAAC,KAAD,CAAMC,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAM,WAAaC,MAAO,CAAEC,eAAgB,QAAxE,WACf,SAAC,KAAD,UAAaN,KACb,gBAAKO,IAAG,0CAAqCN,GAAeO,IAAI,aAFrDT,EADjB,QAUjB,C","sources":["pages/Home/Home.styled.jsx","services/api-search.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MainTitle = styled.h1`\n    text-transform: uppercase;\n    text-align: center;\n`;\n\nexport const ListOfFilms = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n    align-items: flex-end;\n    padding: 0;\n    gap: 40px;\n    list-style: none;\n`;\n\nexport const FilmItem = styled.li`\n    width: 200px;\n`;\n\nexport const NameOfFilm = styled.p`\n    margin: 0;\n    padding: 10px;\n    text-transform: uppercase;\n    color: black;\n    font-weight: 700;\n`;","import axios from \"axios\";\n\nconst API_KEY = 'cff5b6264b529338996c58c3bf596dd8';\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchSearchMovies = async (query) => {\n    try {\n        const response = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n\n        if (!response) {\n            alert('Error');\n            // toast.error('По вашему запросу ничего не найдено!');\n        } else {\n            return response.data.results;\n        }\n        \n    } catch (error) {\n        console.log(error);\n    }\n}","import { useState, useEffect } from \"react\"\nimport { Link, useSearchParams } from \"react-router-dom\";\n\nimport { fetchSearchMovies } from \"services/api-search\";\nimport { ListOfFilms, FilmItem, NameOfFilm } from \"pages/Home/Home.styled\";\n\n\n    const Movies = () => {\n    const [query, setQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n    // eslint-disable-next-line\n    const [searchParams, setSearchParams] = useSearchParams(); \n\n    useEffect(() => {\n        if (query === '') {\n            return;\n        }\n        fetchSearchMovies(query).then(res => setMovies(res));\n    }, [query])\n    \n    const updateQueryString = (query) => {\n    const nextParams = query !== \"\" ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        updateQueryString(e.target.elements.query.value);\n        setQuery(e.target.elements.query.value);\n    }\n    \n    return ( \n        <main>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"query\" />\n                <button type=\"submit\">Submit</button>\n            </form>\n            {movies && <ListOfFilms>\n          {movies.map(({ id, title, poster_path }) => (\n                        <FilmItem key={id}><Link to={`${id}`} state={{ from: \"/movies\" }} style={{ textDecoration: 'none' }}>\n                            <NameOfFilm>{title}</NameOfFilm>\n                            <img src={`https://image.tmdb.org/t/p/w200/${poster_path}`} alt=\"Film\" />\n                            </Link></FilmItem>\n                  ))\n        }\n        </ListOfFilms>}       \n    </main>\n    )\n    }\n\nexport default Movies;"],"names":["MainTitle","styled","ListOfFilms","FilmItem","NameOfFilm","axios","fetchSearchMovies","query","response","alert","data","results","console","log","useState","setQuery","movies","setMovies","useSearchParams","setSearchParams","useEffect","then","res","onSubmit","e","preventDefault","updateQueryString","target","elements","value","type","name","map","id","title","poster_path","to","state","from","style","textDecoration","src","alt"],"sourceRoot":""}